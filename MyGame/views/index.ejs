<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Game</title>
    <style>
        * {
            box-sizing: border-box;
        }

        body {
            margin: 0;
            height: 100vh;
        }
    </style>
</head>
<body>
    <canvas id="canvas" style="display: block"></canvas>
</body>
<script>
    var canvas = document.getElementById('canvas')
    var c = canvas.getContext('2d')
    var body = document.querySelector('body')
    var player = {
        x: 0,
        y: 0,
        w: 20,
        h: 140,
        xdirection: '',
        ydirection: '',
        angle: 0,
        speed: 0,
        xSpeed: 0,
        ySpeed: 0, 
        color: "blue"
    }

    var ball = {
        x: {
            speed: 0,
            position: 500,
            direction: 'none'
        },
        y: {
            speed: 0,
            position: 500,
            direction: 'none'
        },
        r: 12,
        speed: 0,
        angle: 0
            
    }

    var ray = {
        beginX: 0,
        beginY: 0,
        x: ball.x.position,
        y: ball.y.position
    }
    
    var playRay = {
        beginX: 0,
        beginY: 0,
        x: ball.x.position,
        y: ball.y.position
    }

    var mouseX;
    var mouseY;
    var mouseXEvents = [];
    var mouseYEvents = [];

    

    window.onmousemove = function(e){
        mouseX = e.clientX
        mouseY = e.clientY
    }

    
    let gameLoop = () => {
        player.x = mouseX
        player.y = mouseY
        mouseXEvents.push(mouseX)
        mouseYEvents.push(mouseY)
        if (mouseXEvents.length > 2) {
            mouseXEvents.splice(0, mouseXEvents.length - 2)
        }
        if (mouseYEvents.length > 2) {
            mouseYEvents.splice(0, mouseYEvents.length - 2)
        }
        player.xSpeed = mouseXEvents[1] - mouseXEvents[0]
        player.ySpeed = mouseYEvents[1] - mouseYEvents[0]
        player.speed = Math.sqrt(player.xSpeed**2 + player.ySpeed**2)
        
        if (mouseXEvents[1] - mouseXEvents[0] > 0) {
            player.xdirection = 'right'
        } else if (mouseXEvents[1] - mouseXEvents[0] < 0){
            player.xdirection = 'left'
        } else {
            player.xdirection = 'none'
        }
        
        if (mouseYEvents[1] - mouseYEvents[0] > 0) {
            player.ydirection = 'down'
        } else if (mouseYEvents[1] - mouseYEvents[0] < 0) {
            player.ydirection = 'up'
        } else {
            player.ydirection = 'none'
        }
        
        if (ball.x.speed > 0) {
            ball.x.direction = 'right'
        } else if (ball.x.speed < 0) {
            ball.x.direction = 'left'
        } else {
            ball.x.direction = 'none'
        }
        
        if (ball.y.speed > 0) {
            ball.y.direction = 'down'
        } else if (ball.y.speed < 0) {
            ball.y.direction = 'up'
        } else {
            ball.y.direction = 'none'
        }
        
        if (player.ydirection == 'down' || player.ydirection == 'none') {
            player.angle = Math.acos(player.xSpeed / player.speed)
        }
        if (player.ydirection == 'up') {
            player.angle = -Math.acos(player.xSpeed / player.speed)
        }

        if (player.x + player.w > body.offsetWidth) {
            player.x = body.offsetWidth - player.w
        }
        if (player.y + player.h > body.offsetHeight) {
            player.y = body.offsetHeight - player.h
        }

        c.clearRect(0, 0, body.offsetWidth, body.offsetHeight)
        c.fillRect(player.x, player.y, player.w, player.h)
        makeBall()
        createRay()
        createPlayRay()
        ball.x.position += ball.x.speed
        ball.y.position += ball.y.speed
        
        ball.speed = Math.sqrt(ball.x.speed**2 + ball.y.speed**2)


        if (ball.speed > 0) {
            ball.x.speed *= 0.99
            ball.y.speed *= 0.99
        }


        if (ball.x.position + ball.r > body.offsetWidth || ball.x.position - ball.r < 0) {
            //bounce away x
            if (ball.x.position + ball.r > body.offsetWidth) {
                ball.x.position = body.offsetWidth - ball.r
            }
            if (ball.x.position - ball.r < 0) {
                ball.x.position = ball.r
            }
            collision(ball.x)
        }
        if (ball.y.position + ball.r > body.offsetHeight || ball.y.position - ball.r < 0) {
            //bounce away y
            if (ball.y.position + ball.r > body.offsetHeight) {
                ball.y.position = body.offsetHeight - ball.r
            }
            if (ball.y.position - ball.r < 0) {
                ball.y.position = ball.r
            }
            collision(ball.y)
        }

        if (playerBallCollision()) {
            if (player.speed == 0) {
                    if (playerBallCollision() == 'x') {
                        collision(ball.x)
                    }
                    if (playerBallCollision() == 'y') {
                        collision(ball.y)
                    }
            } else if (player.speed > ball.speed) {
                ball.x.speed += player.xSpeed
                ball.y.speed += player.ySpeed
            } else if (player.speed < ball.speed) {
                if (ball.x.direction != player.xdirection) {
                    ball.x.speed += player.xSpeed
                    collision(ball.x)
                } 
                if (ball.y.direction != player.ydirection) {
                    ball.y.speed += player.ySpeed
                    collision(ball.y)
                } 
            }

        }

        requestAnimationFrame(gameLoop)
    }
    gameLoop()
    
    
    function resize() {
        canvas.setAttribute('height', body.offsetHeight)
        canvas.setAttribute('width', body.offsetWidth)
    }
    resize()
    
    window.addEventListener('resize', () => {
        resize()
    })

    function makeBall() {
        c.beginPath();
        c.arc(ball.x.position, ball.y.position, ball.r, 0, 2*Math.PI);
        c.fillStyle = "red";
        c.fill()
        c.stroke();
    }

    function createRay() {
        ray.beginX = ball.x.position
        ray.beginY = ball.y.position
        c.beginPath()
        c.moveTo(ray.beginX, ray.beginY)
        if(ball.x.speed < 0) {
            ray.x = ray.beginX + ball.x.speed - ball.r
        } else if(ball.x.speed > 0) {
            ray.x = ray.beginX + ball.x.speed + ball.r
        }
        if(ball.y.speed < 0) {
            ray.y = ray.beginY + ball.y.speed - ball.r
        } else if(ball.y.speed > 0) {
            ray.y = ray.beginY + ball.y.speed + ball.r
        }
        c.lineTo(ray.x, ray.y)
        // c.stroke()
    }
    
    function createPlayRay() {
        playRay.beginX = ball.x.position
        playRay.beginY = ball.y.position
        c.beginPath()
        c.moveTo(playRay.beginX, playRay.beginY)
        playRay.x = playRay.beginX - Math.cos(player.angle) * 12 - player.xSpeed 
        playRay.y = playRay.beginY - Math.sin(player.angle) * 12 - player.ySpeed 
        c.lineTo(playRay.x, playRay.y)
        c.stroke()
    }
    
    function ballHit() {
    }

    function collision(ball) {
        ball.speed = -ball.speed
    }

    function playerBallCollision() {

        if (ball.y.position >= player.y && ball.y.position <= player.y + player.h) {
            if (ray.beginX < player.x && ray.x > player.x || ray.beginX > player.x + player.w && ray.x < player.x + player.w) {
                if (ball.x.direction == 'right' && ball.x.position > player.x + player.w) {
                    ball.x.position = player.x - ball.r
                } else if (ball.x.direction == 'left' && ball.x.position < player.x) {
                    ball.x.position = player.x + player.w + ball.r
                }
                return 'x'
            }
            if (playRay.beginX < player.x && playRay.x > player.x || playRay.beginX > player.x + player.w && playRay.x < player.x + player.w) {
                if (player.xdirection == 'right' && player.x > ball.x.position + ball.r) {
                    player.x = ball.x.position - ball.r - player.w
                } else if (player.xdirection == 'left' && player.x < ball.x.position - ball.r - player.w) {
                    player.x = ball.x.position + ball.r
                }
                return 'x'
            }
        } 
        if (ball.x.position >= player.x && ball.x.position <= player.x + player.w) {
            if (ray.beginY < player.y && ray.y > player.y || ray.beginY > player.y + player.h && ray.y < player.y + player.h) {
                if (ball.y.direction == 'down' && ball.y.position > player.y + player.h) {
                    ball.y.position = player.y - ball.r
                } else if (ball.y.direction == 'up' && ball.y.position < player.y) {
                    ball.y.position = player.y + player.h + ball.r
                }
                return 'y'
            }
        }
    }
    


</script>
</html>