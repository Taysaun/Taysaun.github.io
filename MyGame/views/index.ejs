<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Game</title>
    <style>
        * {
            box-sizing: border-box;
        }

        body {
            margin: 0;
            height: 100vh;
        }
    </style>
</head>
<body>
    <canvas id="canvas" style="display: block"></canvas>
</body>
<script>
    var canvas = document.getElementById('canvas')
    var c = canvas.getContext('2d')
    var body = document.querySelector('body')
    var player = {
        x: 0,
        y: 0,
        w: 20,
        h: 140,
        xdirection: '',
        ydirection: '',
        speed: 0,
        xSpeed: 0,
        ySpeed: 0, 
        color: "blue",
        isMoving() {

        }
    }

    var ball = {
        x: {
            speed: 0,
            position: 100
        },
        y: {
            speed: 0,
            position: 100
        },
        r: 12,
        speed: 0
            
    }

    var mouseX;
    var mouseY;
    var mouseXEvents = [];
    var mouseYEvents = [];

    
    // var eventlist = []
    window.onmousemove = function(e){
        // eventlist.push(e)
        // if (eventlist.length > 2) {
        //     eventlist.splice(0, eventlist.length - 2)
        // }
        // c.clearRect(eventlist[0].clientX, eventlist[0].clientY, player.w, player.h)
        // player.x = e.clientX
        // player.y = e.clientY
        mouseX = e.clientX
        mouseY = e.clientY
        // player.xSpeed = Math.abs(e.clientX - eventlist[0].clientX)
        // player.ySpeed = Math.abs(e.clientY - eventlist[0].clientY)
        
        // player.speed = Math.sqrt(player.xSpeed**2 + player.ySpeed**2)
        // if (e.clientX - eventlist[0].clientX >= 0) {
        //     player.xdirection = 'right'
        // } else {
        //     player.xdirection = 'left'
        // }
        
        // if (e.clientY - eventlist[0].clientY >= 0) {
        //     player.ydirection = 'down'
        // } else {
        //     player.ydirection = 'up'
        // }
        // return true
    }
    
    let gameLoop = () => {
        mouseXEvents.push(mouseX)
        mouseYEvents.push(mouseY)
        if (mouseXEvents.length > 2) {
            mouseXEvents.splice(0, mouseXEvents.length - 2)
        }
        if (mouseYEvents.length > 2) {
            mouseYEvents.splice(0, mouseYEvents.length - 2)
        }
        player.xSpeed = Math.abs(mouseXEvents[1] - mouseXEvents[0])
        player.ySpeed = Math.abs(mouseYEvents[1] - mouseYEvents[0])
        player.speed = Math.sqrt(player.xSpeed**2 + player.ySpeed**2)

        if (mouseXEvents[1] - mouseXEvents[0] > 0) {
            player.xdirection = 'right'
        } else if (mouseXEvents[1] - mouseXEvents[0] < 0){
            player.xdirection = 'left'
        } else {
            player.xdirection = 'none'
        }
        
        if (mouseYEvents[1] - mouseYEvents[0] > 0) {
            player.ydirection = 'down'
        } else if (mouseYEvents[1] - mouseYEvents[0] < 0) {
            player.ydirection = 'up'
        } else {
            player.ydirection = 'none'
        }
        c.clearRect(0, 0, body.offsetWidth, body.offsetHeight)
        c.fillRect(player.x, player.y, player.w, player.h)
        makeBall()
        ball.x.position += ball.x.speed
        ball.y.position += ball.y.speed

        

        ball.speed = Math.sqrt(ball.x.speed**2 + ball.y.speed**2)
        //make the ball bounce off the top
        if (ball.x.position + ball.r > body.offsetWidth || ball.x.position - ball.r < 0) {
            //bounce away x
            collision(ball.x)
        }
        if (ball.y.position + ball.r > body.offsetHeight || ball.y.position - ball.r < 0) {
            //bounce away y
            collision(ball.y)
        }
        if (playerBallCollision()) {
            if (player.speed == 0) {
                collision(ball.x)
            } else {
                ball.x.speed = player.xSpeed
                ball.y.speed = player.ySpeed
                // if (player.xdirection == 'right') {
                //     ball.x.position += player.xSpeed
                // } 
                // if (player.xdirection == 'left') {
                //     ball.x.position -= player.xSpeed
                // }
                // if (player.ydirection == 'down') {
                //     ball.y.position += player.ySpeed
                // } 
                // if (player.ydirection == 'up') {
                //     ball.y.position -= player.ySpeed
                // }
            }
        }
        requestAnimationFrame(gameLoop)
    }
    gameLoop()
    
    
    function resize() {
        canvas.setAttribute('height', body.offsetHeight)
        canvas.setAttribute('width', body.offsetWidth)
    }
    resize()
    
    window.addEventListener('resize', () => {
        resize()
    })

    function makeBall() {
        c.beginPath();
        c.arc(ball.x.position, ball.y.position, ball.r, 0, 2*Math.PI);
        c.fillStyle = "red";
        c.fill()
        c.stroke();
    }
    
    function ballHit() {
    }

    function collision(ball) {
        // when there is no extra force
        // if the player is touching the ball
        ball.speed = -ball.speed
    }

    function playerBallCollision() {
        if (ball.y.position >= player.y && ball.y.position <= player.y + player.h) {
            if (ball.x.position + ball.r - 3 >= player.x && ball.x.position - ball.r <= player.x + player.w  -3) {
                return true
            } else {
                return false
            }
        } else {
            return false
        }
    }

    function isStopped() {

    }
    


</script>
</html>